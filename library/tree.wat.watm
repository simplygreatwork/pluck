(module
	
	(import "./utility.watm")
	(import "./memory.watm")
	(import "./number.watm")
	(import "./string.watm")
	(import "./list.watm")
	(import "host" "table" (table 1 anyfunc))
	(memory (import "host" "memory") 1)
	(type $i32_i32_i32_i32_i32_to_void (func (param i32) (param i32) (param i32) (param i32) (param i32)))
	
	(func $tree_bytes (result i32)
		(i32.const 4)
	)
	
	(func $tree_new (result i32)
		
		(local $tree i32)
		(set_local $tree (call $memory_allocate (typeof "tree") (call $tree_bytes)))
		(call $tree_root_set (get_local $tree) (i32.const 0))
		(get_local $tree)
	)

	(func $tree_root_get (param $tree i32) (result i32)
		(call $memory_load (get_local $tree) (i32.const 0))		
	)

	(func $tree_root_set (param $tree i32) (param $node i32)
		(call $memory_store (get_local $tree) (i32.const 0) (get_local $node))
	)
	
	(func $tree_set (param $tree i32) (param $key i32) (param $value i32)
		
		(call $tree_root_set
			(get_local $tree)
			(call $tree_insert
				(call $node_new (get_local $key) (get_local $value))
				(call $tree_root_get (get_local $tree))
			)
		)
	)
	
	(func $tree_get (param $tree i32) (param $key i32) (result i32)
		(call $tree_find (get_local $key) (call $tree_root_get (get_local $tree)))
	)
	
	(func $tree_insert (param $node i32) (param $root i32) (result i32)
		
		(local $result i32)
		(set_local $result (get_local $root))
		(if (i32.eq (get_local $root) (i32.const 0)) (then
			(set_local $result (get_local $node))
		) (else
			(if (i32.eq (call $tree_string_compare (call $node_key (get_local $node)) (call $node_key (get_local $root))) (i32.const 0)) (then
				(call $node_value_set (get_local $root) (call $node_value (get_local $node)))
			) (else
				(if (i32.eq (call $tree_string_compare (call $node_key (get_local $node)) (call $node_key (get_local $root))) (i32.const -1)) (then
					(call $node_left_set (get_local $root) (call $tree_insert (get_local $node) (call $node_left (get_local $root))))
				) (else
					(call $node_right_set (get_local $root) (call $tree_insert (get_local $node) (call $node_right (get_local $root))))
				))
			))
		))
		(get_local $result)
	)
	
	(func $tree_find (param $key i32) (param $root i32) (result i32)
		
		(local $result i32)
		(set_local $result (i32.const 0))
		(if (i32.eq (get_local $root) (i32.const 0)) (then
			(set_local $result (i32.const 0))
		) (else
			(if (i32.eq (call $tree_string_compare (get_local $key) (call $node_key (get_local $root))) (i32.const 0)) (then
				(set_local $result (call $node_value (get_local $root)))
			) (else
				(if (i32.eq (call $tree_string_compare (get_local $key) (call $node_key (get_local $root))) (i32.const -1)) (then
					(set_local $result (call $tree_find (get_local $key) (call $node_left (get_local $root))))
				) (else
					(set_local $result (call $tree_find (get_local $key) (call $node_right (get_local $root))))
				))
			))
		))
		(get_local $result)
	)
	
	(func $tree_number_compare (param $number_a i32) (param $number_b i32) (result i32)
		(call $number_compare (get_local $number_a) (get_local $number_b))
	)
	
	(func $tree_string_compare (param $string_a i32) (param $string_b i32) (result i32)
		(call $string_compare (get_local $string_a) (get_local $string_b))
	)
	
	(func $tree_iterate (param $tree i32) (param $function i32) (param $context i32)
		
		(local $index i32)
		(set_local $index (call $number_new (i32.const 0)))
		(call $tree_iterate_walk (get_local $tree) (call $tree_root_get (get_local $tree)) (get_local $function) (get_local $index) (get_local $context))
	)
	
	(func $tree_iterate_walk (param $tree i32) (param $root i32) (param $function i32) (param $index i32) (param $context i32)
		
		(if (i32.ne (get_local $root) (i32.const 0)) (then
			(call $tree_iterate_walk (get_local $tree) (call $node_left (get_local $root)) (get_local $function) (get_local $index) (get_local $context))
			(call_indirect (type $i32_i32_i32_i32_i32_to_void)
				(get_local $tree) (call $node_key (get_local $root)) (call $node_value (get_local $root)) (get_local $index) (get_local $context)
				(get_local $function)
			)
			(set_local $index_ (i32.add (get_local $index_) (i32.const 1)))
			(call $number_value_set (get_local $index) (i32.add (call $number_value (get_local $index)) (i32.const 1)))
			(call $tree_iterate_walk (get_local $tree) (call $node_right (get_local $root)) (get_local $function) (get_local $index) (get_local $context))
		))
	)
	
	(func $tree_length (param $tree i32) (result i32)
		
		(local $context i32)
		(set_local $context (call $tree_new))
		(call tree_set (get_local $context) "length" (call $number_new (i32.const 0)))
		(call $tree_iterate (get_local $tree) (ref "tree_length_iterate_each") (get_local $context))
		(call $tree_get (get_local $context) "length")
	)
	
	(func $tree_length_iterate_each (param $tree i32) (param $key i32) (param $value i32) (param $index i32) (param $context i32)
		
		(local $length i32)
		(set_local $length (call $tree_get (get_local $context) "length"))
		(call $number_value_set
			(get_local $length)
			(i32.add (call $number_value (get_local $length)) (i32.const 1))
		)
	)
	
	(func $tree_size (result i32)
		(i32.const 0)
	)
	
	(func $node_bytes (result i32)
		(i32.const 16)
	)

	(func $node_new (param $key i32) (param $value i32) (result i32)
		
		(local $node i32)
		(set_local $node (call $memory_allocate (typeof "tree_node") (call $node_bytes)))
		(call $node_key_set (get_local $node) (get_local $key))
		(call $node_value_set (get_local $node) (get_local $value))
		(call $node_left_set (get_local $node) (i32.const 0))
		(call $node_right_set (get_local $node) (i32.const 0))
		(get_local $node)
	)
	
	(func $node_key (param $node i32) (result i32)
		(call $memory_load (get_local $node) (i32.const 0))
	)
	
	(func $node_key_set (param $node i32) (param $key i32)
		(call $memory_store (get_local $node) (i32.const 0) (get_local $key))
	)
	
	(func $node_value (param $node i32) (result i32)
		(call $memory_load (get_local $node) (i32.const 4))
	)
	
	(func $node_value_set (param $node i32) (param $value i32)
		(call $memory_store (get_local $node) (i32.const 4) (get_local $value))
	)
	
	(func $node_left (param $node i32) (result i32)
		(call $memory_load (get_local $node) (i32.const 8))
	)
	
	(func $node_left_set (param $node i32) (param $left i32)
		(call $memory_store (get_local $node) (i32.const 8) (get_local $left))
	)
	
	(func $node_right (param $node i32) (result i32)
		(call $memory_load (get_local $node) (i32.const 12))
	)
	
	(func $node_right_set (param $node i32) (param $right i32)
		(call $memory_store (get_local $node) (i32.const 12) (get_local $right))
	)
)
