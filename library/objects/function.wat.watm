(module
	
	(import "../utility.watm")
	(import "../memory.watm")
	(import "../system.watm")
	(import "../string.watm")
	(import "../list.watm")
	(import "../function.watm")
	(import "../object.watm")
	(import "../map.watm")
	(import "../console.watm")
	(import "../vector.watm")
	(import "../number.watm")
	(memory (import "host" "memory") 1)
	(import "host" "table" (table 1 anyfunc))
	(global $global (import "host" "global") (mut i32))
	
	(func $object_function_prototype (result i32)
		
		(local $map i32)
		(set_local $map (call $system_prototype (string "function")))
		(call $map_set $map (string "id") (function "object_function_id"))
		(call $map_set $map (string "parameters") (function "object_function_parameters"))
		(call $map_set $map (string "result") (function "object_function_result"))
		(get_local $map)
	)
	
	(func $object_function_new (param $id i32) (param $parameters i32) (param $result i32) (result i32)
		
		(local $object i32)
		(set_local $object (call $object_new))
		(call $object_subject_set (get_local $object) (call $function_new (get_local $id) (get_local $parameters) (get_local $result)))
		(call $object_prototype_set (get_local $object) (call $object_function_prototype))
		(get_local $object)
	)
	
	(func $object_function_from_function (param $function i32) (result i32)
		
		(local $object i32)
		(set_local $object (call $object_new))
		(call $object_subject_set (get_local $object) (get_local $function))
		(call $object_prototype_set (get_local $object) (call $object_function_prototype))
		(get_local $object)
	)
	
	(func $object_function_id (param $object i32) (result i32)
		(call $function_id (call $object_subject (get_local $object)))
	)
	
	(func $object_function_parameters (param $object i32) (result i32)
		(call $function_parameters (call $object_subject (get_local $object)))
	)
	
	(func $object_function_result (param $object i32) (result i32)
		(call $function_result (call $object_subject (get_local $object)))
	)
	
	(func $object_function_test (param $object i32) (result i32)
		(string "test")
	)
)
