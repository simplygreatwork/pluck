(module
	
	(import "../utility.watm")
	(import "../memory.watm")
	(import "../resource.watm")
	(import "../string.watm")
	(import "../list.watm")
	(import "../function.watm")
	(import "../object.watm")
	(import "../map.watm")
	(import "../number.watm")
	(import "../vector.watm")
	(import "./string.watm")
	(memory (import "host" "memory") 1)
	(import "host" "table" (table 1 anyfunc))
	(global $global (import "host" "global") (mut i32))
	
	(func $object_number_prototype (result i32)
		
		(local $map i32)
		(set_local $map (call $resource_prototype (string "number")))
		(if (i32.eq (get_local $map) (i32.const 0)) (then
			(set_local $map (call $object_object_prototype))
			(call $map_set $map (string "to_string") (function "object_number_to_string"))
			(call $map_set $map (string "value") (function "object_number_value"))
			(call $map_set $map (string "value_set") (function "object_number_value_set"))
			(call $map_set $map (string "add") (function "object_number_add"))
			(call $map_set $map (string "subtract") (function "object_number_subtract"))
			(call $map_set $map (string "equals") (function "object_number_equals"))
			(call $map_set $map (string "compare") (function "object_number_compare"))
			(call $map_set $map (string "iterate") (function "object_number_iterate"))
			(call $map_set $map (string "clone") (function "object_number_clone"))
			(call $resource_prototype_set (string "number") (get_local $map))
		))
		(get_local $map)
	)
	
	(func $object_number_from_number (param $number i32) (result i32)
		
		(local $object i32)
		(set_local $object (call $object_new))
		(call $object_subject_set (get_local $object) (get_local $number))
		(call $object_prototype_set (get_local $object) (call $object_number_prototype))
		(get_local $object)
	)
	
	(func $object_number_from_primitive (param $primitive i32) (result i32)
		(call $object_number_from_number (call $number_new (get_local $primitive)))
	)
	
	(func $object_number_value (param $object i32) (result i32)
		(call $number_value (call $object_subject (get_local $object)))
	)
	
	(func $object_number_value_set (param $object i32) (param $value i32)
		(call $number_value_set (call $object_subject (get_local $object)) (get_local $value))
	)
	
	(func $object_number_add (param $a i32) (param $b i32) (result i32)
		
		(call $object_number_from_number (call $number_add
			(call $object_subject (get_local $a))
			(call $object_subject (get_local $b))
		))
	)
	
	(func $object_number_subtract (param $a i32) (param $b i32) (result i32)
		(call $number_subtract (call $object_subject (get_local $a)) (get_local $b))
	)
	
	(func $object_number_equals (param $a i32) (param $b i32) (result i32)
		(call $number_equals (call $object_subject (get_local $a)) (get_local $b))
	)
	
	(func $object_number_compare (param $a i32) (param $b i32) (result i32)
		(call $number_compare (call $object_subject (get_local $a)) (get_local $b))
	)
	
	(func $object_number_iterate (param $object i32)
		(call $number_iterate (call $object_subject (get_local $object)))
	)
	
	(func $object_number_to_string (param $object i32) (result i32)
		(call $object_string_from_string (call $number_to_string (call $object_subject (get_local $object))))
	)
	
	(func $object_number_clone (param $object i32) (result i32)
		
		(call $object_clone_with_subject 
			(get_local $object)
			(call $number_clone (call $object_subject (get_local $object)))
		)
	)
)
