
module
	
	directive literals as objects
	include essentials
	include essential-objects
	
	function main
		
		system_bootstrap
		create_list
		create_map
		create_string
		create_number
		create_boolean
		create_function
		create_object
		
	function create_list
		
		heading "create_list"
		set list to ((system object "List") clone)
		set list to (List clone)
		list push "zero"
		list_push (list subject) "one"
		list push "two"
		list get 0
		print (list get 0)
		print (list get 1)
		print (list get 2)
		list push 3
		list push 4
		list pop
		set list to (list map (func accepts value (result i32)
			set value to (value to_string)
			return (value append "_")
		))
		list iterate (func accepts list item value index context
			print ("value: '" append (value append ("', index: " append index)))
		) 0
		print ("joined: " append (list join ", "))
		
	function create_map
		
		heading "create_map"
		set map to ((system object "Map") clone)
		set map to (Map clone)
		map put "0" "zero"
		map put "1" "one"
		map put "2" "two"
		map iterate (func accepts map key value index context
			print ("key: '" append (key append ("', value: '" append (value append ("', index: " append index)))))
		) 0
		print (map get "0")
		print (map get "1")
		print (map_get (map subject) (string: "2"))
		map get "2"
		
	function create_string
		
		heading "create_string"
		set string to ("Hello" append " world!")
		string print
		set string to "Hello universe!"
		set string to (string: clone)
		string print
		
	function create_number
		
		heading "create_number"
		print ((20 add 20) add 2)
		print "iterating over the number 3:"
		set number to 3
		number "iterate" (func accepts number index context
			print index
		)
		set b to (number clone)
		print (number add b)
		
	function create_boolean
		
		heading "create_boolean"
		print ("true: " append true)
		print ("false: " append false)
		set condition to (1 plus 1 equals 2)
		if condition (print "1 plus 1 equals 2")
		print (true clone)
		print (false clone)
		
	function create_function
		
		heading "create_function"
		set function_ to (object_function_from_function (function: "create_function_callable"))
		print (number_new (function_id function_))
		print (function_ result)
		
	function create_function_callable
		
		print "hello"
		
	function create_object
		
		heading "create_object"
		set object to (object_new)
		object value = 42
		print ("object value: " append (object value))
		object function_with_zero_arguments = (function: "function_with_zero_arguments")
		object function_with_zero_arguments
		object function_with_one_argument is (function: "function_with_one_argument")
		object function_with_one_argument "one"
		object function_with_two_arguments = (function: "function_with_two_arguments")
		object function_with_two_arguments "one" "two"
		object function_with_three_arguments is (function: "function_with_three_arguments")
		object function_with_three_arguments "one" "two" "three"
		object add_one = (function: "add_one")
		print (object add_one 41)
		print object
		
	function function_with_zero_arguments accepts object
		
		print "function_with_zero_arguments called"
		
	function function_with_one_argument accepts object one
		
		set string to "function_with_one_argument called with value: "
		set string to (string: append one)
		print string
		
	function function_with_two_arguments accepts object one two
		
		set string to "function_with_two_arguments called with values: "
		set string to (string: append (one append ", "))
		set string to (string: append (two append " "))
		print string
		
	function function_with_three_arguments accepts object one two three
		
		set string to "function_with_three_arguments called with values: "
		set string to (string: append (one append ", "))
		set string to (string: append (two append ", "))
		set string to (string: append (three append " "))
		print string
		
	function add_one accepts object value (result i32)
		
		return (value add 1)
		
	function heading accepts value
		
		print " "
		print "--------------------"
		print value
		print "--------------------"
		