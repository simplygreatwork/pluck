
module
	
	directive literals as primitives
	import "../library/utility.watm"
	import "../library/memory.watm"
	import "../library/resource.watm"
	import "../library/system.watm"
	import "../library/string.watm"
	import "../library/number.watm"
	import "../library/boolean.watm"
	import "../library/types.watm"
	import "../library/function.watm"
	import "../library/object.watm"
	import "../library/console.watm"
	import "../library/list.watm"
	import "../library/map.watm"
	import "../library/vector.watm"
	import "../library/operator.watm"
	import "host" "table" (table 1 anyfunc)
	memory (import "host" "memory") 1
	
	function main
		
		system_bootstrap
		create_functions
		
	function create_functions
		
		set a to (func func_a
			print "hello"
		)
		a
		set b to (func func_b (result i32)
			return 42
		)
		print (b)
		set c to (func func_c (param $value i32) (result i32)
			return (value plus 1)
		)
		print (c 41)
		